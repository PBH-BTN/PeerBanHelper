# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Release

on:
  workflow_dispatch:
  release:
    types:
      - published
jobs:
  WebUI:
    uses: ./.github/workflows/build_fe.yml
  build:
    needs: WebUI
    permissions:
      contents: write
      checks: write
      actions: read
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - uses: luangong/setup-install4j@v1
        name: Setup Install4j
        with:
          version: 10.0.8
          license: ${{ secrets.INSTALL4J_LICENSE }}
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -P install4j-ci,thin-sqlite-packaging
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux-${{ github.sha }}
          path: |
            target/*.jar
            target/peerbanhelper-binary
            target/media/*.exe
      - name: Upload release binaries
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["target/PeerBanHelper.jar", "target/media/PeerBanHelper_*"]'
        id: project
      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set Up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghostchu/peerbanhelper
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,latest-jvm-universal
            type=raw,latest
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}-jvm-universal
      # ---------------- ALIYUN ACR --------------------
      - name: Log in to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: "registry.cn-hangzhou.aliyuncs.com"
          username: ${{ secrets.ALIYUN_ACR_USERNAME }}
          password: ${{ secrets.ALIYUN_ACR_PASSWORD }}
      - name: Extract metadata (tags, labels) for Aliyun ACR
        id: meta-acr
        uses: docker/metadata-action@v5.5.1
        with:
          images: registry.cn-hangzhou.aliyuncs.com/ghostchu/peerbanhelper
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,latest-jvm-universal
            type=raw,latest
            type=sha
      - name: Build and push Aliyun ACR
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
          tags: ${{ steps.meta-acr.outputs.tags }}
          labels: ${{ steps.meta-acr.outputs.labels }}-jvm-universal
